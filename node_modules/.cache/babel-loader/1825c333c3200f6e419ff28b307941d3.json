{"ast":null,"code":"var _jsxFileName = \"/Users/modulewrapper/Desktop/Sanchay/StudyMode/Web Dev/WebPractice/BolChal/src/contexts/AuthContext.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebase';\nconst AuthContext = React.createContext();\nexport const useAuth = () => useContext(AuthContext); //react children i.e JSX that are being provide handled by authprovider\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      setUser(user);\n      setLoading(false);\n      if (user) history.push('/chats');\n    });\n  }, [user, history]);\n  const value = {\n    user\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, !loading && children, \" \");\n};","map":{"version":3,"sources":["/Users/modulewrapper/Desktop/Sanchay/StudyMode/Web Dev/WebPractice/BolChal/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","useHistory","auth","AuthContext","createContext","useAuth","AuthProvider","children","loading","setLoading","user","setUser","history","onAuthStateChanged","push","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,QAA1B,EAAmCC,SAAnC,QAAmD,OAAnD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,IAAR,QAAmB,aAAnB;AAEA,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAMP,UAAU,CAACK,WAAD,CAAhC,C,CAEP;;AACA,OAAO,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACzC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,IAAD,CAA/B;AACA,QAAMa,OAAO,GAAGX,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,IAAI,CAACW,kBAAL,CAAyBH,IAAD,IAAQ;AAC5BC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,UAAGC,IAAH,EAASE,OAAO,CAACE,IAAR,CAAa,QAAb;AACZ,KALD;AAMH,GAPQ,EAOP,CAACJ,IAAD,EAAOE,OAAP,CAPO,CAAT;AASA,QAAMG,KAAK,GAAG;AAACL,IAAAA;AAAD,GAAd;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIK,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACP,OAAD,IAAYD,QADjB,MADJ;AAMH,CAtBM","sourcesContent":["import React, {useContext,useState,useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {auth} from '../firebase';\n\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\n//react children i.e JSX that are being provide handled by authprovider\nexport const AuthProvider = ({ children }) =>{\n    const [loading,setLoading] = useState(true);\n    const [user,setUser] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.onAuthStateChanged((user)=>{\n            setUser(user);\n            setLoading(false);\n\n            if(user) history.push('/chats');\n        })\n    },[user, history]);\n\n    const value = {user};\n\n    return(\n        <AuthContext.Provider value = {value}>\n            {!loading && children} {/* If not loading then show the children*/}\n        </AuthContext.Provider>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}